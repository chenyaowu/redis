通用命令
命令						作用						时间复杂度
keys * 					遍历所有的key			O(n)
keys his*				查找开头是his的key		O(1)
dbsize 					计算key总数 				O(1)
exists key 				判断key是否存在 			O(1)
del key [key...] 		删除key 					O(1)
expire key seconds      key在seconds秒后过期  	O(1)
ttl key                 查看key剩余时间  			O(1)
persis key 	 			去掉key多余时间  			O(1)
type key  				返回key类型  			O(1)

数据结构(内部编码)
string(raw、int、embstr)
hash(hashtable、ziplist)
list(linkedlist、ziplist)
set(hashtable、intset)
zset(skiplist、ziplist)

单线程
为什么那么快
1.纯内存
2.非阻塞IO
3.避免线程切换和竞争消耗
注意
1.一次只运行一条命令
2.拒绝长（慢）命令
eg:keys、flushall、flushdb、slow lua script、mutil/exec、operate big value(collection)
3.其实不是单线程（fysnc file descriptor 、close file descritor）



字符串
场景：缓存、计数器、分布式锁
API
get key        获取值                          					O(1)
set key        设置键值											O(1)
del key        删除key											O(1)
incr key       key自增1，key不存在，自增后get(key) = 1			O(1)
decr key       key自减1, key不存在，自减后get(key) = -1			O(1)
incrby key k   key自增k,如果key不存在，自增后get(key) = k 		O(1)
decrby key k   key自减k,如果key不存在，自增后get(key) = -k 		O(1)

set   key value     不管key是否存在，都设置						O(1)
setnx key value		key不存在，才设置								O(1)
set   key value xx  key不存在，才设置 							O(1)

mget key1 key2 key3                      批量获取key,原子操作    O(n)
mset key1 value1 key2 value2 key3 value3 批量设置key-value   	O(n)

getset key newvalue    set key newvalue并返回旧的value   		O(1) 
append key value 	   将value追加到旧的value 					O(1)
strlen key 			   返回字符串的长度							O(1)

incrbyfloat key 3.5      增加key对应的值3.5						O(1)
getrange key start end   获取指定字符串指定下标所有的值			O(1)
setrange key index value 设置指定下标所有对应的值					O(1)



Hash
结构
key   field value
API
hget key field			获取hash key对应的field的value 			O(1)
hset key field value 	设置hash key对应field的value   			O(1)
hdel key field 			删除hash key对应field的value  			O(1)
hexists key field		判断hash kye是否存在field					O(1)
hlen key 				获取hash key field的数量 				O(1)
hmget key field1 field2...                批量获取hash key的一批field对应的值  O(n)
hmset key field1 value1 field2 value2 ... 批量设置hash key的一批 field value  O(n)

hincrby key filed k 增加hash key对应的field的值增加k 				O(1)

hgetall key 			获取所有key value 						O(n)
hvals key 				获取所有filed的value  					O(n)
hkeys key  				获取hash key对应所有的field 				O(n)

hsetnx key field value    设置hash key对应field的value(如果field已经存在，则失败) O(1)
hincrby key field k       hash key对应的field的value自增k							O(1)
hincrbyfloat key field k  hincrby浮点数版										O(1)



List
API
rpush key value1 value2... 				 从列表右边插入值					O(n)
lpush key value1 value2... 				 从列表左边插入值					O(n)
linsert key before|after value newValue  在list指定的值前|后插入newValue  O(n)
lpop key 								 从列表左侧弹出一个item  			O(1)
rpop key 								 从列表右侧弹出一个item  			O(1)
ltrim key start end 					 按照索引范围修剪列表  			O(n)
lrange key start end 					 获取列表指定索引范围所有的item   O(n)
lindex key index						 获取列表指定索引的item 			O(n)
llen key 								 获取列表的长度 					O(n)
lset key index newValue              	 设置列表指定索引值为newValue		O(n)

lrem key count value   					O(n)							
根据count值，从列表中删除所有value相等的项
count>0，从左到右，删除最多count个value相等的项
count<0，从右到左，删除最多-count个value相等的项
count=0，删除所有value相等的项

blpop key timeout  lpop阻塞版本，timeout是阻塞超时时间,timeout=0为永远不阻塞 	O(1)
brpop key timeout  rpop阻塞版本，timeout是阻塞超时时间，timeout=0为永远不阻塞  O(1)



Set
API
sadd key element 		向集合key添加element(如果element已经存在，添加失败) 	O(1)
srem key element 		将集合key中的element移除 								O(1)
scard key				计算集合大小											O(1)
sismenber key element	判断element是否存在									O(1)
srandmember key element 从集合中随机挑count个元素								O(1)
smembers key 			获取集合所有元素										O(1)
spop key 				从集合中随机弹出一个元素								O(1)

sdiff key1 key2 		差集
sinter key1 key2 		交集
sunion key1 key2 		并集



ZSet
结构
key   score value
API
zadd key score element(可以是多对) 				添加score和element				O(logN)
zrem key element(可以是多个) 					删除元素 						O(1)
zscore key element 								返回元素分数						O(1)
zincrby key increScore element 					增加或减少元素分数				O(1)
zcard key 										返回元素的总个数					O(1)
zrange key start end [withscores] 				返回指定索引返回的升序元素[分值]  O(log(n)+m)
zrangebyscore key minScore maxScore [withscores]返回指定分数范围的升序元素[分值]  O(log(n)+m)
zcount key minScore maxScore 					返回有序集合内在指定分数范围内的个数 O(log(n)+m)
zremrangebyrank key start end 					删除指定排名内的升序元素			O(log(n)+m)
zremrangebyscore key minScore maxScore 			删除指定分数内升序元素			O(log(n)+m)








